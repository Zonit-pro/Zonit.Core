@using Zonit.Extensions.Organizations

@implements IDisposable

@inject IWorkspaceProvider Workspace
@inject IWorkspaceManager WorkspaceManager

@inject ICultureProvider Culture


@if(Workspace.Organization is not null)
{

    <MudButton Variant="Variant.Text" FullWidth=true OnClick="OpenDrawer">@Culture.Translate("Your organizations")</MudButton>

    <MudDivider Class="my-2" />

    <MudDrawer @bind-Open="@open" Width="300px" Height="100%" Anchor="Anchor.End" Elevation="3" Variant="@DrawerVariant.Temporary"  Class="z-index: 99999999">
        <MudDrawerHeader>
            <div Class="d-flex align-center justify-space-between flex-grow-1 gap-4">
                <MudText Typo="Typo.h6">@Culture.Translate("Organizations")</MudText>
                <MudIconButton OnClick="@(() => OpenDrawer())"
                               Icon=@Icons.Material.Filled.Close
                               aria-label="@Culture.Translate("Close")" />
            </div>
        </MudDrawerHeader>
        <MudNavMenu>
            <MudPaper Elevation="0" Class="px-6 py-2">
                <MudText Align="Align.Center" Class="mb-3">
                    <MudAvatar Color="Color.Surface" Rounded="true" Style="height:90px; width:90px; font-size:2rem;">
                        @Workspace.Organization.Name[0]
                    </MudAvatar>
                </MudText>
                <MudText Align="Align.Center" Class="my-3" Typo="Typo.body1">
                    @Workspace.Organization.Name
                </MudText>

                <MudDivider Class="my-4" />          
                @if (Organizations is not null)
                {
                    <MudText Typo="Typo.body1">@Culture.Translate("Your organizations")</MudText>
                    <MudList T=string>
                        @foreach (var organization in Organizations)
                        {
                            <MudListItem Disabled="@(Workspace.Organization.Id == organization.Id)" OnClick="(async () => await SwitchAsync(organization.Id))">@organization.Name</MudListItem>
                        }
                    </MudList>
                }
                <MudDivider Class="my-2" />
                <MudButton FullWidth="true" Href="Organizations">@Culture.Translate("Manage organizations")</MudButton>
            </MudPaper>
        </MudNavMenu>
    </MudDrawer>
}

@code{
    bool open;
    IReadOnlyCollection<OrganizationModel>? Organizations = [];

    protected override async Task OnInitializedAsync()
    {
        Organizations = await WorkspaceManager.GetOrganizationsAsync();
    }

    protected override void OnInitialized()
    {
        Culture.OnChange += StateHasChanged;
        Workspace.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        Culture.OnChange -= StateHasChanged;
        Workspace.OnChange -= StateHasChanged;
    }

    void OpenDrawer()
        => open = !open;

    public async Task SwitchAsync(Guid organizationId)
    {
        await WorkspaceManager.SwitchOrganizationAsync(organizationId);
    }
}